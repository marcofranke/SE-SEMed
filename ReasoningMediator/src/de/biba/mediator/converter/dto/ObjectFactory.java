//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2012.11.23 at 12:09:57 PM CET 
//


package de.biba.mediator.converter.dto;

import javax.xml.bind.annotation.XmlRegistry;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the de.biba.mediator.converter.dto package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {


    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: de.biba.mediator.converter.dto
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link Conversions }
     * 
     */
    public Conversions createConversions() {
        return new Conversions();
    }

    /**
     * Create an instance of {@link SimpleRule }
     * 
     */
    public SimpleRule createSimpleRule() {
        return new SimpleRule();
    }

    /**
     * Create an instance of {@link ComplexRule }
     * 
     */
    public ComplexRule createComplexRule() {
        return new ComplexRule();
    }

    /**
     * Create an instance of {@link DualExpression }
     * 
     */
    public DualExpression createDualExpression() {
        return new DualExpression();
    }

    /**
     * Create an instance of {@link SingleExpression }
     * 
     */
    public SingleExpression createSingleExpression() {
        return new SingleExpression();
    }

}
